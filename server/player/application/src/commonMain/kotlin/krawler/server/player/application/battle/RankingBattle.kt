package krawler.server.player.application.battle

/**
 * Represents a battle that includes ranking or placement information.
 *
 * This interface is for battles where the local player achieves a final rank or position,
 * such as Showdown modes, but is not limited to them.
 */
sealed interface RankingBattle : Battle {
    /**
     * The final rank achieved by the local player in this battle.
     */
    val rank: RankingPosition
}

/**
 * Represents a ranking battle (like showdown, but not limited to) generated by the Map Maker tool.
 *
 * This is a specialized [RankingBattle] where the battle is based on a
 * custom map or event created via mapmaker. All implementations must
 * provide the associated [MapMakerBattleEvent].
 */
sealed interface MapMakerRankingBattle : RankingBattle, MapMakerBattle {
    /** The mapmaker event associated with this ranking battle. */
    override val event: MapMakerBattleEvent
}

/**
 * Marker interface for **friendly ranking battles**.
 *
 * Inherits from [RankedBattle] to share ranking-related properties like [rank] and [event].
 */
sealed interface FriendlyRankingBattle : RankingBattle, FriendlyBattle

/**
 * Marker interface for **trophy league ranking battles**.
 *
 * Inherits from [RankedBattle] to share ranking-related properties like [rank] and [event].
 */
sealed interface TrophyLeagueRankingBattle : RankingBattle, TrophyLeagueBattle
